{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[message,setMessage]=useState('');useEffect(()=>{axios.get('http://backend:8080/api')// Nome do serviço do backend no Docker\n.then(response=>setMessage(response.data.message)).catch(error=>console.error(error));},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mensagem do Backend\"}),/*#__PURE__*/_jsx(\"p\",{children:message||'Carregando...'})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","App","message","setMessage","get","then","response","data","catch","error","console","children"],"sources":["D:/Biblioteca/Documentos/testeShopper/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst App: React.FC = () => {\r\n  const [message, setMessage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    axios.get('http://backend:8080/api') // Nome do serviço do backend no Docker\r\n      .then(response => setMessage(response.data.message))\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Mensagem do Backend</h1>\r\n      <p>{message || 'Carregando...'}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAS,EAAE,CAAC,CAElDD,SAAS,CAAC,IAAM,CACdE,KAAK,CAACQ,GAAG,CAAC,yBAAyB,CAAE;AAAA,CAClCC,IAAI,CAACC,QAAQ,EAAIH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAACL,OAAO,CAAC,CAAC,CACnDM,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACET,KAAA,QAAAW,QAAA,eACEb,IAAA,OAAAa,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5Bb,IAAA,MAAAa,QAAA,CAAIT,OAAO,EAAI,eAAe,CAAI,CAAC,EAChC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}